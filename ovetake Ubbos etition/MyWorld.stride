<?xml version="1.0" encoding="UTF-8"?>
<class name="MyWorld" extends="World" extends-java="World" enable="true" strideversion="1">
    <javadoc xml:space="preserve"/>
    <imports>
        <import target="java.util.*" enable="true"/>
        <import target="greenfoot.*" enable="true"/>
    </imports>
    <implements/>
    <fields>
        <variable access="private" type="Backround" type-java="Backround" name="backround" value="new Backround()" value-java=" new Backround()" enable="true"/>
        <variable access="private" type="Backround" type-java="Backround" name="backround2" value="new Backround()" value-java=" new Backround()" enable="true"/>
    </fields>
    <constructors>
        <constructor access="public" enable="true">
            <javadoc xml:space="preserve">Constructor for objects of class MyWorld.</javadoc>
            <params/>
            <throws/>
            <delegate target="super" params="800,800,1,false" params-java="800, 800, 1, false"/>
            <body>
                <call expression="prepare()" expression-java="prepare()" enable="true"/>
            </body>
        </constructor>
    </constructors>
    <methods>
        <method access="public" type="void" type-java="void" name="act" enable="true">
            <javadoc xml:space="preserve"/>
            <params/>
            <throws/>
            <body>
                <if condition="Greenfoot.getRandomNumber(100)&lt;2" condition-java="Greenfoot.getRandomNumber(100) &lt; 2" enable="true">
                    <ifStatements>
                        <variable type="Car1" type-java="Car1" name="car" value="new Car1()" value-java=" new Car1()" enable="true"/>
                        <call expression="addObject(car,450,-30)" expression-java="addObject(car, 450, -30)" enable="true"/>
                    </ifStatements>
                </if>
                <if condition="Greenfoot.getRandomNumber(100)&lt;1" condition-java="Greenfoot.getRandomNumber(100) &lt; 1" enable="true">
                    <ifStatements>
                        <variable type="Car2" type-java="Car2" name="car2" value="new Car2()" value-java=" new Car2()" enable="true"/>
                        <call expression="addObject(car2,353,-30)" expression-java="addObject(car2, 353, -30)" enable="true"/>
                        <call expression="car2.turn(180)" expression-java="car2.turn(180)" enable="true"/>
                    </ifStatements>
                </if>
                <if condition="Greenfoot.isKeyDown(&quot;s&quot;)" condition-java="Greenfoot.isKeyDown(&quot;s&quot;)" enable="true">
                    <ifStatements>
                        <call expression="backround.setSpeed(8)" expression-java="backround.setSpeed(8)" enable="true"/>
                        <call expression="backround2.setSpeed(8)" expression-java="backround2.setSpeed(8)" enable="true"/>
                    </ifStatements>
                    <else>
                        <call expression="backround.setSpeed(15)" expression-java="backround.setSpeed(15)" enable="true"/>
                        <call expression="backround2.setSpeed(15)" expression-java="backround2.setSpeed(15)" enable="true"/>
                    </else>
                </if>
            </body>
        </method>
        <method access="private" type="void" type-java="void" name="prepare" enable="true">
            <javadoc xml:space="preserve">Prepare the world for the start of the program.
That is: create the initial objects and add them to the world.</javadoc>
            <params/>
            <throws/>
            <body>
                <call expression="addObject(backround,400,400)" expression-java="addObject(backround, 400, 400)" enable="true"/>
                <call expression="addObject(backround2,400,-400)" expression-java="addObject(backround2, 400, -400)" enable="true"/>
                <variable type="Abulance" type-java="Abulance" name="abulance" value="new Abulance()" value-java=" new Abulance()" enable="true"/>
                <call expression="addObject(abulance,474,672)" expression-java="addObject(abulance, 474, 672)" enable="true"/>
            </body>
        </method>
    </methods>
</class>
